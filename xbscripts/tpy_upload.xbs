/*
 * tpy_upload: Selector de ficheros para enviar al Servidor.
 */

#include "tpy_xbs.ch"

FUNCTION tpy_upload( )

   Local oWnd,oBox,oLabel,oBtn
   Local oDescri,cDescri
   Local oScript, cScript
   Local oForm
   Local cRes
   Local aData, aStruct

   //oTpuy:RunXBS("netio_check")

   DEFINE oForm PUBLIC   /* ::<exp> => oForm:<exp> */

   ::aObjects := {"oXBS","oUI","oHeaders","oImgns"}

   ::cResFile := oTpuy:cResources+"tpy_upload.ui"

   SET RESOURCES ::oRes FROM FILE ::cResFile

   DEFINE WINDOW ::oWnd TITLE "Actualización de Ficheros en el Servidor" ;
          SIZE 700,500 ;
          ID "window1" RESOURCE ::oRes OF oTpuy:oWnd 

      ::oWnd:SetSkipTaskBar( .t. )

      DEFINE BUTTON ::oBtn ;
             ACTION __upload( oForm ) ;
             ID "button1" RESOURCE ::oRes 

      ::nPBar := 0
      DEFINE PROGRESSBAR ::oPBar VAR ::nPBar TOTAL 1 ;
             ID "progressbar" RESOURCE ::oRes

      DEFINE BUTTON ::oExit ACTION iif( MsgNoYes("¿Realmente Desea Salir?"),::End(),NIL) ;
             ID "btn_exit" RESOURCE ::oRes

      DEFINE NOTEBOOK ::oBook ID "notebook" RESOURCE ::oRes


      /* boton Marcar Todo */
      // bCode a Asignar
      ::bSelAll := { | ... | __ChAll( ::Get( ::aObjects[ ::oBook:GetCurrentPage() ] ), .t., ... )  } 
      DEFINE TOOLBUTTON ::oSetAll ;
             ACTION ::Get(::aObjects[::oBook:GetCurrentPage()]):oListBox:ForEach( ::bSelAll )  ;
             ID "set_all" RESOURCE ::oRes
             DEFINE TOOLTIP WIDGET ::oSetAll TEXT "Marca/Desmarca Todos Los Registros"


      /* boton Desmarcar Todo */
      // bCode a Asignar
      ::bClean := { | ... | __ChAll( ::Get( ::aObjects[ ::oBook:GetCurrentPage() ] ), .f., ... )  }  
      DEFINE TOOLBUTTON ::oClean ;
             ACTION ::Get(::aObjects[::oBook:GetCurrentPage()]):oListBox:ForEach( ::bClean )  ;
             ID "clean" RESOURCE ::oRes
             DEFINE TOOLTIP WIDGET ::oClean TEXT "Desmarca Todos Los Registros"




      DEFINE IMAGE ::oImage ID "image" RESOURCE ::oRes

      /*   Contenedor de Scripts */
      DEFINE ::oXBS PUBLIC
      DEFINE BOX ::oContXBS ID "cont_scripts" RESOURCE ::oRes
         ::oXBS:aFiles := Directory( oTpuy:cXBScripts+"*.xbs" )
         __GenLbx(oForm,::oXBS,::oContXBS)

         ::oXBS:oListBox:bEdit := {||  __Change( ::oXBS )  }
         ::oXBS:oListBox:Active()



      /*   Contenedor de Recursos Graficos */
      DEFINE ::oUI PUBLIC
      DEFINE BOX ::oContUI ID "cont_ui"      RESOURCE ::oRes
         ::oUI:aFiles := Directory( oTpuy:cResources+"*.ui" )
         __GenLbx(oForm,::oUI,::oContUI)

         ::oUI:oListBox:bEdit := {||  __Change( ::oUI )  }
         ::oUI:oListBox:Active()


      /*   Contenedor de Cabeceras */
      DEFINE ::oHeaders PUBLIC
      DEFINE BOX ::oContHeaders ID "cont_headers" RESOURCE ::oRes
         ::oHeaders:aFiles := Directory( "./include/*.ch" )
         __GenLbx(oForm,::oHeaders,::oContHeaders)

         ::oHeaders:oListBox:bEdit := {||  __Change( ::oHeaders )  }
         ::oHeaders:oListBox:Active()


      /*   Contenedor de Imagenes */
      DEFINE ::oImgns PUBLIC
      DEFINE BOX ::oContImgns ID "cont_img" RESOURCE ::oRes
         ::oImgns:aFiles := Directory( oTpuy:cImages+"*" )
         __GenLbx(oForm,::oImgns,::oContImgns)

         ::oImgns:oListBox:bEdit := {||  __Change( ::oImgns )  }
         ::oImgns:oModel:bOnChange := {|| __RefreshImg( oForm, ::oImgns ) } 
         ::oImgns:oListBox:Active()


      ::oBtn:SetFocus()

   ACTIVATE WINDOW ::oWnd CENTER
   
RETURN


procedure __RefreshImg( oForm, oContainer  )
   local cFileName
   local nHigh, nWidth, nRel

   cFileName := oTpuy:cImages+oContainer:oListBox:GetValue("Nombre")

   ::oImage:SetFile( cFileName )
   nHigh  := ::oImage:GetHeight()
   nWidth := ::oImage:GetWidth()

   if nHigh > 200 .OR. nWidth > 500
      nRel := ::oImage:GetRelation()
      While (nHigh > 200 .OR. nwidth > 500) .AND. nRel > 0
         nWidth := nWidth * 0.9
         nHigh  := nWidth / nRel
      EndDo
      ::oImage:Adjust(nWidth)
   endif

return


/* 
 * Procedimiento de Actualización
 */
procedure __upload( oForm )
   local bXBS   := {|...| __checking( oForm, ::oXBS,     ... ) }
   local bUI    := {|...| __checking( oForm, ::oUI,      ... ) }
   local bHead  := {|...| __checking( oForm, ::oHeaders, ... ) }
   local bImgns := {|...| __checking( oForm, ::oImgns,   ... ) }

   local cFile, cDescri, aFiles,cText
   local oMsgRun, oObject

   if !MsgNoYes( "¿Realmente desea iniciar la actualización? ", "Por favor, confirme." )
      return .f.
   endif

   ::oXBS:aFiles     := {}
   ::oXBS:cPath      := oTpuy:cXBScript
   ::oXBS:bRun       := {| cFile |  oTpuy:RunXBS("sendscript", StrTran( cFile, ".xbs", "" ) )  }

   ::oUI:aFiles      := {}
   ::oUI:cPath       := oTpuy:cResources
   ::oUI:bRun        := {| cFile | MsgInfo(cFile) }

   ::oHeaders:aFiles := {}
   ::oHeaders:cPath  := "./include/"
   ::oHeaders:bRun   := {| cFile | MsgInfo(cFile) }

   ::oImgns:aFiles := {}
   ::oImgns:cPath  := oTpuy:cImages
   ::oImgns:bRun   := {| cFile | MsgInfo(cFile) }


   ::oXBS:oListBox:ForEach( bXBS )
   ::oUI:oListBox:ForEach( bUI )
   ::oHeaders:oListBox:ForEach( bHead )
   ::oImgns:oListBox:ForEach( bImgns )

   FOR EACH oObject IN { ::oXBS, ::oUI, ::oHeaders, ::oImgns }

      FOR EACH aFiles IN { oObject:aFiles } //, ::oUI:aFiles, ::oHeaders:aFiles, ::oImgns:aFiles }
         nFiles := LEN( aFiles )
         ::oPBar:SetTotal( nFiles )
         ::oPBar:SetValue( 0 )
         ::oPBar:SetText("")

         FOR EACH cFile IN aFiles

            cText := "Procesados.. ( " + AllTrim( Str( cFile:__EnumIndex() ) ) + " / "
            cText += AllTrim( Str( nFiles ) ) + " ) "

            //oTpuy:RunXBS("sendscript", STRTRAN(cFile,".xbs","")  )
            EVAL( oObject:bRun, cFile )
         
            ::oPBar:SetValue( cFile:__EnumIndex() )
            ::oPBar:SetText( cText )
         NEXT
      NEXT

   NEXT

return .t.


/*
 * Crea un arreglo con los registros marcados.
 */
function __checking( oForm, oObj, oTreeView, pModel, aIter, pPath )
   if oObj:oListBox:GetValue("Actualizar", aIter )
      //MsgInfo( "Actualizar " + oObj:oListBox:GetValue("Nombre", aIter) )
      AADD( oObj:aFiles, oObj:oListBox:GetValue("Nombre",aIter) )
   endif
return .t.



/* 
 * Marca o Desmarca todos los registros según sea el caso 
 */
Procedure __ChAll( oObj, lMarca, oTreeView, pModel, aIter, pPath )
  local uValue
  default lMarca := .t.
  if lMarca
     uValue := oObj:oListBox:GetValue("Actualizar", aIter)
  else
     uValue := .t.
  endif
  oObj:oListBox:Set( , "Actualizar", !uValue, aIter )

return 



/* 
 * Cambia Valor en el registro actual 
 */
Function __Change( oObj, lNext )
   local cColumn := "Actualizar"
   
   default lNext := .t.

   oObj:oListBox:Set( , cColumn, !oObj:oListBox:GetValue(cColumn) )
   if lNext ; oObj:oListBox:GoNext() ; endif

return nil




/* 
 * Genera el Modelo de Datos, ListBox y lo coloca en el contenedor indicado. 
 */
FUNCTION __GenLbx( oForm, oObj, oContainer )
   local aData, aStruct
   local aFile

   if hb_IsNil( oObj ) ; MsgAlert("Problemas!") ; endif

   oObj:aData := ARRAY( LEN(oObj:aFiles), 5 )

   FOR EACH aFile IN oObj:aFiles
       oObj:aData[ aFile:__EnumIndex, 1 ] := aFile[1]  // Nombre
       oObj:aData[ aFile:__EnumIndex, 2 ] := .f.       // Actualizar
       oObj:aData[ aFile:__EnumIndex, 3 ] := aFile[3]  // Fecha
       oObj:aData[ aFile:__EnumIndex, 4 ] := aFile[4]  // Hora
       oObj:aData[ aFile:__EnumIndex, 5 ] := .f.       // Diferencia
   NEXT


   aStruct := {	;
              {"Nombre","C",20,0},;
              {"Actualizar","L",1,0},;
              {"Fecha","D",10,0},;
              {"Hora","C",10,0},;
              {"Diferencia","L",1,0};
              }


   DEFINE MODEL oObj:oModel ;
          STRUCT aStruct ;
          DATA   oObj:aData


   DEFINE LISTBOX oObj:oListBox MODEL oObj:oModel ;
          SIZE 300,00 OF oContainer

      oObj:oListbox:lBar := .f.

RETURN oObj

//eof
