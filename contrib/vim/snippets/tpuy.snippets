# oTpuy
snippet tp
	oTPuy:${1:}

# main()
snippet main
	Function Main()
	

	Return 

#Function
snippet func
	Function ${1:FunctionName}() 
	   local ${2:uReturnValue} 
	   ${3:}
	Return ${2} 

#Procedure
snippet proc
	Procedure ${1:ProcedureName}() 
	   ${2:}
	Return 

# init xbscript
snippet xbs
	/* 
	 * Proyecto TPuy
	 * ${1:`Filename('')`}: ${2:Script Description.}
	 *
	 */

	#include "tpy_xbs.ch"

	Procedure $1()
	   local oForm

	   #include "xbs_init.prg"

	   ${3}

	Return

	//eof

# DEFINE WINDOW 
snippet dwin
	DEFINE WINDOW ${1:oWnd} TITLE "${2:Title}" ;
	       SIZE ${3:X},${4:Y} 

	   ${7:}

	ACTIVATE WINDOW $1 ${5:CENTER} ${6:VALID}
	

# DEFINE WINDOW FROM RESOURCE (GLADE)
snippet dwing
	RESOURCE ${1:::cRes} FROM FILE oTpuy:cResource+"${2:file}.ui" 

	DEFINE WINDOW ${3:::oWnd} TITLE "${4:Title}" ;
	       SIZE ${5:X},${6:Y} ID "${7:win_name}" RESOURCE $1

	   ${10:}

	ACTIVATE WINDOW $3 ${8:CENTER} ${9:VALID}

# DEFINE BOX
snippet dbox
	DEFINE BOX ${1:::oBox} ${2:VERTICAL} ${3:HOMOGENEOUS} BORDER ${4:nBorder} SPACING ${5:nSpacing} ;
	       OF ${6:::oParent} ${7:CONTAINER} ${8:EXPAND} ${9:FILL} PADDING ${10:nPadding}

# DEFINE BOX (GLADE)
snippet dboxg
	DEFINE BOX ${1:::oBox} ID "${2:box_name}" RESOURCE ${3:::cRes}

# DEFINE LABEL
snippet dlab
	DEFINE LABEL ${1:::oLabel} TEXT "${2:Text or cVar}" ${3:MARKUP} ${4:MNEMONIC} ${5:CONTAINER} ${6:FILL};
	       FONT ${7:::oFont} PADDING ${8:nPadding} OF ${9:::oParent}

# DEFINE LABEL (GLADE)
snippet dlabg
	DEFINE LABEL ${1:::oLabel} TEXT "${2:Text or cVar}" ID "${3:label_name}" RESOURCE ${4:::cRes}

# DEFINE BUTTON
snippet dbut
	DEFINE BUTTON ${1:::oBtn} TEXT "${2:Text or cVar}" ;
	       ACTION ${3:bAction} ;
	       VALID  ${4:bValid} ;
	       FONT   ${5:::oFont} ;
	       FROM STOCK ${6:cFromStock} ;
	       ${7:MNEMONIC} ${8:EXPAND} ${9:FILL} ${10:CONTAINER} PADDING ${11:nPadding} ;
	       OF ${12:::oParent}

#DEFINE BUTTON (GLADE)
snippet dbutg
	DEFINE BUTTON ${1:::oBtn} TEXT "${2:Text or cVar}" ID "${3:button_name}" RESOURCE ${4:::cRes}
	

# #include "..."
snippet inc
	#include "${1:`Filename('')`}.ch"${2}
# #ifndef ... #define ... #endif
snippet Def
	#ifndef $1
	#define ${1:SYMBOL} ${2:value}
	#endif${3}
snippet def
	#define 
snippet ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif
# If Condition
snippet if
	if (${1:/* condition */}) 
		${2:/* code */}
	endif
snippet el
	else 
		${1}
	endif

# query
snippet qrys
	${1:::cQry} := "select ${2:column,column} from ${3:table} "
	$1 += " inner join ${4:table_join} on ${5:/* condition */} "
	$1 += " where ${6:/* condition */} "

	${7:::oQry} := ${8:::oConn}:Execute($1)

	if $7:lError 
	   ${9:::cError} := $7:cError
	   $7:End()
	   return $9
	endif

	if $7:RecCount=0
	   $7:End()
	   return nil
	endif

	${10}

# tracelog
snippet log
	tracelog( ${1:/* note,function,etc */} )

# FOR EACH
snippet foreach
	FOR EACH ${1:element} IN ${2:matriz}
	   /* $1:__EnumIndex() */
	   ${3}
	NEXT

	${4}

# MsgRunStart / Stop
snippet msgr2
	${1:::oMsgRun} := MsgRunStart( "${2:message}" )
	   ${3:/* code */}
	MsgRunStop( $1 )

	${4}

# MsgRun
snippet msgr
	MsgRun( "${1:Message}", {|${2:o}| ${3:/* code */} } ) 

# MsgInfo
snippet msgi
	MsgInfo( "${1:Message}", "${2:Title}"${3: MARKUP} ) 

